@startuml class_diagram

skinparam classAttributeIconSize 0
skinparam classFontSize 14


'Entities
class Member {
    -username: String
    -password: String
    -userData: Object
    +validateData(Member): boolean
    +registerData(Member): void
    +authUserData(Member): boolean
}

note right of Member
  Clase que representa a los usuarios
  del sistema y sus datos
end note

class EventApprover {
    +validateUserPermissions(Member): boolean
    +validateEventData(Event): boolean
    +reportValidation(): boolean
}

class Calendar {
    -events: List<Event>
    +addEventToCalendar(Event): void
    +reportCalendarUpdate(): boolean
}

class PublicationApprover {
    +validatePublication(Publication): boolean
    +reportPublicationStatus(): boolean
}

'Controllers
class SignUpController {
    +sendInputData(Member): void
    +askNewUserValidation(Member): boolean
    +reportNewUser(): boolean
    +askDisplay(Frame): void
}

class SignInController {
    +sendInputData(String, String): void
    +askUserValidation(Member): boolean
    +sendValidationStatus(): boolean
    +askDisplay(Frame): void
}

class PublicationController {
    +sendInputData(Publication): void
    +askValidatePublication(Publication): boolean
    +reportPublicationStatus(): boolean
    +askDisplay(Frame, PopUp): void
}

class NewEventController {
    +sendInputData(Event): void
    +askValidateUser(Member): boolean
    +askUpdateCalendar(Event): void
    +askDisplay(Frame, PopUp): void
}

'Interfaces
class SignUpFrame {
    +showFrame(Frame): void
    +fillNewUserData(Member): void
}

class SignInFrame {
    +showFrame(Frame): void
    +fillUserData(String, String): void
}

class MainFrame {
    +showFrame(Frame): void
}

class NewPublicationFrame {
    +showFrame(Frame, PopUp): void
    +newPublication(Publication): void
}

class NewEventFrame {
    +showFrame(Frame, PopUp): void
    +newEvent(Event): void
}

'Additional Classes needed
class Event {
    -eventData: Object
    -date: Date
    -description: String
}

class Publication {
    -content: Object
    -date: Date
    -author: Member
}

'Relaciones
Member "1" -- "*" Publication : creates >
Member "1" -- "*" Event : creates >
Calendar "1" -- "*" Event : contains >
PublicationApprover -- Publication : validates >
EventApprover -- Event : validates >

SignUpController -- Member : manages >
SignInController -- Member : authenticates >
PublicationController -- Publication : manages >
NewEventController -- Event : manages >

SignUpFrame -- SignUpController : uses >
SignInFrame -- SignInController : uses >
NewPublicationFrame -- PublicationController : uses >
NewEventFrame -- NewEventController : uses >

MainFrame -- SignUpController : displays <
MainFrame -- SignInController : displays <
MainFrame -- PublicationController : displays <
MainFrame -- NewEventController : displays <

@enduml
